---
- name: SSSD Packages
  apt:
    name:
      - adcli
      - krb5-user
      - samba
      - sssd

- name: Create sssd.conf
  template:
    src: etc_sssd_sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: "0600"

- name: Create sssd gwaz.conf
  template:
    src: etc_sssd_conf.d_gwaz.conf.j2
    dest: /etc/sssd/conf.d/gwaz.conf
    owner: root
    group: root
    mode: "0600"

- name: Create krb5.conf
  template:
    src: etc_krb5.conf.j2
    dest: /etc/krb5.conf
    backup: yes
    owner: root
    group: root
    mode: "0644"

- name: Disable sss on sudoers nsswitch
  replace:
    dest: /etc/nsswitch.conf
    regexp: '^(sudoers:\s+files) sss'
    replace: '\1'

- name: Update Deepin pam.d
  when: ansible_facts['distribution'] == 'Deepin'
  block:
    - name: Add sss to common-auth
      pamd:
        state: before
        name: common-auth
        type: auth
        control: "[success=1 default=ignore]"
        module_path: pam_deepin_authentication.so
        new_type: -auth
        new_control: "[success=2 default=ignore]"
        new_module_path: pam_sss.so
        module_arguments: use_first_pass

- name: Update Ubuntu pam.d
  when: ansible_facts['distribution'] == 'Ubuntu'
  block:
    - name: Fix sss pam-config
      replace:
        dest: /usr/share/pam-configs/sss
        regexp: 'Priority: \d+'
        replace: 'Priority: 999'

    - name: Pam Update
      command: pam-auth-update --package --enable sss

- name: Connect to AD
  expect:
    command: adcli join --domain {{ sssd_domain }} --login-user {{ sssd_auth_user }} --domain-ou "{{ sssd_ou }}" --os-name "{{ ansible_distribution }}" --os-version "{{ ansible_distribution_version }}"
    creates: /etc/krb5.keytab
    responses:
      (?i)password: "{{ sssd_auth_passwd }}"
  no_log: true

- name: restart sssd
  service:
    name: sssd
    state: restarted
